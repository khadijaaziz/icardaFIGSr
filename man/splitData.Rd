% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/splitData.R
\name{splitData}
\alias{splitData}
\title{Splitting Data}
\usage{
splitData(data, seed = NULL, y, p, ...)
}
\arguments{
\item{data}{object of class "data.frame" with target variable and predictor variables.}

\item{seed}{integer. Values for the random number generator. Default: NULL.}

\item{y}{character. Target variable.}

\item{p}{numeric. Proportion of data to be used for training.}

\item{...}{additional arguments to be passed to \code{createDataPartition} function in \code{caret} package to control the way the data is split.}
}
\value{
A list with two data frames: the first as train set, and the second as test set.
}
\description{
this function splits the Data into Train and Test Sets, it returns a list containing two data frames for the train and test sets.
}
\details{
\code{splitData} relies on the \code{createDataPartition} function from the \code{caret} package to perform the data split.

If \code{y} is a factor, the sampling of observations for each set is done within the levels of \code{y} such that the class distributions are more or less balanced for each set.

If \code{y} is numeric, the data is split into groups based on percentiles and the sampling done within these subgroups. See \code{\link[caret]{createDataPartition}} for more details on additional arguments that can be passed.
}
\examples{
\dontrun{
if(interactive()){
 # Split the data into 70/30 train and test sets for factor y
 data(septoriaDurumWC)
 split.data <- splitData(septoriaDurumWC, seed = 1234,
                         y = 'ST_S', p = 0.7)

 # Get training and test sets from list object returned
 trainset <- split.data$trainset
 testset <- split.data$testset
 }
}
}
\seealso{
\code{\link[caret]{createDataPartition}}
}
\author{
Zakaria Kehel, Bancy Ngatia
}
